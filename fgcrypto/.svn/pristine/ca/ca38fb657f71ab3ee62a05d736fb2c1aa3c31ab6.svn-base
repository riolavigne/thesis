\section{Fine-Grained Key Exchange}
\label{sec:FineGrainedKeyExchange}

Now we will explain a construction for a \emph{key exchange} using general distributions. We will then specify the properties we need for problems to generate a secure key exchange. We will finally generate a key exchange using the strong zero $k$-clique hypothesis \ref{cor:3cliqueKeyExchange}. 

\subsection{Description of Weak Key Interactive Exchange}

The high level description of the key exchange is as follows. Alice and Bob each produce $\ell(n)$ instances using $\Generate(n)$. In a randomly chosen $\sqrt{\ell(n)}$ of these instances they will plant a solution using $\Plant(I)$. Call the set of indices that Alice chooses to plant $S_A$ and the set Bob picks $S_B$. The likely size of $S_A \cap S_B$ is $1$. The index $S_A \cap S_B$ is the basis for the key. 

Alice determines the index $S_A \cap S_B$ by brute forcing all problems at indices $S_A$ that Bob published. This allows Alice to learn $S_A \cap S_B$. Bob can brute force all problems at indices $S_B$ that Alice published and learn the set  $S_A \cap S_B$. 

If after brute forcing for instances either Alice or Bob find a number of solutions not equal to 1 then they repeat the procedure. They only need to repeat a constant number of times. 

More formally our functions do the following. 

$\setup(1^n)$ outputs $\mpk= (n, \ell(n))$ and $\ell(n)>100$.

$\keygen(ID, \mpk)$ starts by selecting a random subset of $[1,\ell(n)]$ of size $\sqrt{\ell(n)}$, call this $S_{ID}$. For $j\in S_{ID}$ set $I_j = \Plant(\Generate(n))$, for $j\in [1,\ell(n)]$ and $j\nin S_{ID}$ set $I_j = \Generate(n)$. Let $\mathbb{I}_{ID} = [I_1, \ldots, I_{\ell(n)}]$.
Now $pk= \mathbb{I}_{ID}$ and $sk=S_{ID}$.

Once $\setup(1^n)$, $\keygen(ID_1, \mpk)$ and $\keygen(ID_2, \mpk)$ have run we can run 
$\sharedKey(ID_1, pk_1, ID_2, sk_2)$. Let $pk_1 = [I_1, \ldots, I_{\ell(n)}]$. Let $sk_2 = S_{ID_2}$. For all $I_j$ where $j\in S_{ID_2}$ solve $I_j$. If $I_j$ has a solution then add $j$ to $S_{preimage}$. If $|S_{preimage}|=1$ then $k=j$. If $|S_{preimage}|\ne 1$ error, we must repeat the key exchange. The probability of a repetition is $\leq 1/e+1/\sqrt{ell(n)} \leq 1/2$ if $\ell(n)>100$ so we don't need to repeat very often. 


\subsection{Description of Weak Key Non Interactive Exchange}
We will define this key exchange in terms of the interactive exchange. 

$\setup'(1^n)$ outputs $\mpk= (n, \ell(n))$ and $\ell(n)>100$.

$\keygen'(ID, \mpk)$ runs $\keygen(ID, \mpk)$ $\lg^2(n)$ times with independent randomness returning $pk_1,\ldots, pk_{\lg(n)}$ and $sk_1,\ldots,sk_{\lg(n)}$. Now $pk'= (pk_1,\ldots$, $pk_{\lg^2(n)})$ and $sk=(sk_1,\ldots,sk_{\lg^2(n)})$.

Once $\setup'(1^n)$, $\keygen'(ID_1, \mpk)$ and $\keygen(ID_2, \mpk)$ have run we can run 
$\sharedKey'(ID_1, pk_1, ID_2, sk_2)$. We simply run $\sharedKey(ID_1,pk_{i,1}, ID_2, sk_{i,2})=key_i$ for $i \in [1,\lg^2(n)]$. Let $j$ be the smallest index such that $\sharedKey(ID_1,pk_{j,1}$, $ID_2, sk_{j,2})$ returns a key and not an error. Return the $key =key_j$. If there is no such $j$ error. However, the probability of this is $O(1/n^{\lg(n)})$ and is thus very unlikely. 

\subsection{Proof of Hardness}

We show that the key-exchange results in gaps in running time and success probability between Alice and Bob and Eve. Then, we will show that this scheme can be boosted in a fine-grained system to get larger probability gaps while preserving the running time gaps. 

\newcommand{\keyER}{KER}

Before doing this, to simplify our statements we will define a class of problems as being Key Exchange Ready (KER).

\begin{definition}[Key Exchange Ready (KER)]
A problem $P$ is $\ell(n)$-\keyER~ with plant time $G(n)$, solve time $S(n)$ and lower bound $T(n)$ if
	\begin{itemize}
	\item has an algorithm which runs in $\tilde\Theta(S(n)))$ time that determines if an instance has a solution or not,
	\item  is $T(n)$-\ACIH,
	\item the problem is Average Case List-hard with list length $\ell(n)$,
	\item is Generalized Splittable with error $\leq 1/(100 \ell(n))$ to the problem $P'$ and,
	\item $P'$ plantable in time $G(n)$ with error $\leq 1/(100 \ell(n))$.
\end{itemize}
\end{definition}

We use the constant $100$ in this definition to drive the produced errors down by constants to make the growth beyond $2/3$ small and allow us to bound the probability of the adversary guessing the key by $4/5$. However, the choice of $100$ is fairly arbitrary. Any number large enough to keep the adversary's chance of guessing bellow $1$ will suffice. 

\begin{lemma}[Weak Fine-grained key exchange]
	If a problem $P$ is $\ell(n)$-\keyER~ with plant time $G(n)$, solve time $S(n)$ and lower bound $T(n)$ when $\ell(n)>100$	
	then there is a key-exchange in which Alice and Bob successfully communicate a key, $key$, of length $\log(\ell(n))$ bits in time $\tilde{O}(\sqrt{\ell(n)}S(n) + \ell(n)G(n))$ with probability $\geq 1-1/(100 \sqrt{\ell(n)})$. 
	
	Let $I_T$ be the full transcript that Alice and Bob write and $r$ all the random bits used to generate it. For all $\PFT{\ell(n)T(n)}$ algorithms $A$ 
	$$Pr_{r}[A(I_T)=key]<4/5+2/\sqrt{\ell(n)}.$$	
	\label{lem:keyexchangebasic}
\end{lemma}
\begin{proof}
We will be using the weak non-interactive protocol described above. 	
	
Let $\Plant(I)$ be the planting procedure. Let $\GeneralSplit(I)$ be the splitting procedure were it produces $m$ pairs in its output. Let $\Split_h(I)$ return the $h^{th}$ pair output by 	$\GeneralSplit(I)$.
	
We know that finding the index of the instance which has a solution out of a list of $O(\ell(n))$ instances with probability greater than $7/10$ takes time $\tilde{\Omega}(\ell(n) T(n))$. 

Let $\mathbf I = I_1,I_2,\ldots,I_{\ell(n)}$, each of size $n$
distributed as follows: $i \getsr [\ell(n)]$ and $I_i \sim D_1(P,n)$ and for all $j \neq i$, $I_j \sim D_0(P,n)$

We will use a similar trick to the one used in Theorem\ref{thm:zkcSelfReduce}. We will make many calls where we only care about one. The other calls need to simply not return false positives, because we can brute force the returned index to check.
For every $h\in[1,m]$ we will produce an output using $\Split_h(I_i)$. 
Each will have an error probability $\leq 1/(100 \ell(n) m)$. We can run each independently, we only care about two things. First, we want to not get a false positive on any instance that started with no solution, this happens with probability $\leq ( \ell(n) m)/(100 \ell(n) m) \leq 1/100$. Let $I_i$ be the instance drawn from $D_1(P',n)$. Second, we want that for the $h$ where $\Split_h(I_i)$ is drawn from $D_1(P',n)$ that $\Split_h(I_j)$ where $j\ne i$ is drawn from $D_0(P',n)$. This has probability $\leq ( \ell(n))/(100 \ell(n) m) \leq 1/100$. 

Apply the splittable procedure to every instance creating $\Split_h(I_j) = I^1_j,I^2_j$ for $j\in[1,s(n)]$. Then, choose $2\sqrt{\ell(n)}-2$ unique indices put $\sqrt{\ell(n)}-1$ in $T_1$ and $\sqrt{\ell(N)}-1$ in $T_2$. Note $T_1 \cap T_2 = \emptyset$.  

For all $i\in T_1$ replace $I_i^1$ with $\Plant(I_i^1)$. For all $i\in T_2$ replace $I_i^2$ with $\Plant(I_i^2)$. Let $j$ be the index where $I_j$ had a solution and now $I_j^1,I_j^2$ both have solutions (if we have not run into errors). Call this list of problems $\mathbb L$.  If $j \in T_1 \cup T_2$. This happens with probability $1/\sqrt{\ell(n)}$. Finally, we have the potential error from planting which introduces a term of $1/(100\sqrt{\ell(n)})$.

So, first lets note the computational hardness of solving for $j$ given the input of $L$.
Finding $j$ with probability greater than $7/10+1/100+2/\sqrt{\ell(n)}$ requires time $\tilde{\Omega}(T(N)\ell(n))$. 

Next, we want to show that the distribution produced by splitting and planting has total variation distance $3/100+1/\sqrt{\ell(n))}$ from Alice and Bob's distribution. Alice and Bob produce the instances using the generator $2\ell(n)$ times to generate the instances of $P'$ and then plant in $\sqrt{\ell(n)}$ locations each, call the produced lists $L_{AB}$. If these collide in more than $1$ location then Alice and Bob repeat. Using the generator Alice and Bob's initial unplanted instances have a total variation distance of  $\leq(n) 1/50$ from $D_{0}^{2\ell(n)}(P',n)$. They plant instances using the same planter $\Plant$ as we did above. With probability $1-1/\sqrt{\ell(n)}$ both $L$ and $L_{AB}$ have $\sqrt{\ell(n)}$ instances planted in each half of the list. Finally, the splitting procedure also introduces a chance of error, specifically $1/100$. Thus, the total variation distance is bounded by $3/100+2/\sqrt{\ell(n)}$ between $L$ and $L'$. Thus, if Eve has a very high chance of success ($\geq 4/5 +2/\sqrt{\ell(n)}$)of returning the $key$, we can use Eve's algorithm to find the value of $j$. This gives us a computational lower bound for Eve.  

Using the procedure we described before for Alice and Bob they have to generate $\ell(n)$ instances and brute force $\sqrt(\ell(n))$ instances. This takes time\\ $\tilde{O}(\sqrt{\ell(n)}T(n) + \ell(n)G(n))$. Alice and Bob get an error whenever their planted instance collides with an erroneously generated solution. This happens with probability $\leq 1/(100 \sqrt{\ell(n)})$ probability. 
\end{proof}

Now we will use repetition techniques and the xor lemma to boost the probability gaps between Alice and Bob and Eve. We also use hard core bit techniques to produce a key where every individual bit is hard to compute. 

\begin{theorem}[Fine-grained boosted key exchange]
	If a problem $P$ is $\ell(n)$-\keyER~ with plant time $G(n)$, solve time $S(n)$ and lower bound $T(n)$ and $\ell(n)>100\lg^3(n)$
then there is a key-exchange in which Alice and Bob successfully communicate a key, $key$, of length $\log(\alpha(n))$ bits in time $\tilde{O}\left((\sqrt{\ell(n)}S(n) + \ell(n)G(n))\alpha(n)\right)$ with probability $\geq 1-1/(n)^{\lg(n)}$. Let $I_T$ be the full transcript that Alice and Bob write and $r$ all the random bits used to generate it. For all $\PFT{\ell(n)T(n)}$ algorithms $A$, $A(I_T)$ has an insignificant advantage to guess the $i^{th}$ bit of the key for all $i$.	
\label{thm:keyExchange}
\end{theorem}
\begin{proof}	
Using the procedure from Lemma \ref{lem:keyExchangeAllErrorsLow} we can communicate one bit between Alice and Bob. Simply repeat this procedure $\alpha(n)$ times. All the bits are independent so Eve's chance of discovering any one of them is still 
$$Pr_{r}[A(I_T)=key]<1/2+1/f(n)$$
for all functions $f(n)=\left(T(n)\ell(n)\right)^{o(1)}$. Further note that $T(n)= \Omega(n)$. So, the advantage that $A$ can have can not be \emph{any} insignificant function, thus it must be significant.
\end{proof}

Now here is a quick theorem about why our definition for a fine-grained key exchange implies fine-grained PKC.

\begin{theorem}\label{thm:fgkeyx-fgpkc}
	If there exists a non-interactive $\fgkeyxc{T(n)}{\epsilon}{\gamma}$ where $\epsilon, \gamma = \insig(n)$ that has key-length $\kappa$, then there exists a CPA-secure $\fgpkc{T(n)}$ for messages of length $\kappa$.
\end{theorem}
The proof of this is simple: if Bob wants to encrypt a message to Alice, he uses his own information to run $\sharedKey$, and then sends his public key and message $m$ xor'd with the shared key to Alice. An adversary able to gain any information about any part of $m$ must have learned at least a bit of the shared key, but this is impossible if the adversary is $\PFT{T(n)}$.


We have a corollary for zero k clique specifically. 
We specify that $R = 10 \binom{k}{2}2^{4\binom{k}{2}} n^{x} n^{2k}$, note that $R = O( n^{2x} n^{2k})$ the other terms are just constants. 


\begin{corollary}
Given the \strongzkc~ over range $R = \ell(n)^2 n^{2k}$ a key exchange exists where Alice and Bob successfully communicate a sub-polynomial number of bits with probability $1- 1/(n^{\lg(n)})$ in time $\tilde{O}\left(n^{k}\sqrt{\ell(n)} + n^2\ell(n)\right)$ for every polynomial $\ell(n)=\tilde{\Theta}(n^c)$. Let $I_T$ be the full transcript that Alice and Bob write and $r$ all the random bits used to generate it. For all $\PFT{\ell(n)n^k}$ algorithms $A$, $A(I_T)$ has an insignificant advantage to guess the $i^{th}$ bit of the key for all $i$.	
\label{cor:kcliqueKeyExchange}
\end{corollary}
\begin{proof}
We will simply plug in the constants from our proofs Theorems \ref{thm:zkcPlantable}, \ref{thm:zkcSelfReduce} and, 
\ref{thm:zkcsplittable} into Theorem \ref{thm:keyExchange}. 

Let the number of instances in the list be $\ell(n)$ be a polynomial $n^c$. Our tightest constraint comes from splitting. It gives us  
$\binom{k}{2}4^{\binom{k}{2}}3 n^k/\sqrt{R} \leq 1/(\ell(n)100)$. Which implies 
$R \geq \ell(n)^2 n^{2k}\binom{k}{2}^22^{4\binom{k}{2}}90000$. 

Note that $\binom{k}{2}^22^{4\binom{k}{2}}90000$ is a constant. So, we can use the \strongzkc~ over the range $R = \ell(n)^2 n^{2k}$.
\end{proof}

The zero $3$-clique hypothesis (the zero triangle hypothesis) is generally better believed than the zero $k$-clique hypothesis for larger $k$. Here we show that even with the strong zero $3$-clique hypothesis we get a key exchange with a gap in the running times of Alice and Bob vs Eve. 

\begin{corollary}
	Given the strong zero $3$-clique hypothesis over range $R = n^{6+4c}$ a key exchange exists where Alice and Bob successfully communicate a sub-polynomial number of bits with probability $1- 1/(n^{\lg(n)})$ in time $\tilde{O}\left(n^{3+c} + n^{2+2c}\right)$ for any constant $c$. Let $I_T$ be the full transcript that Alice and Bob write and $r$ all the random bits used to generate it. For all $\PFT{n^{3+2c}}$ algorithms $A$, $A(I_T)$ has an insignificant advantage to guess the $i^{th}$ bit of the key for all $i$.	
	\label{cor:3cliqueKeyExchange}
\end{corollary}
\begin{proof}
	Simply plug in $k=3$ and $\ell(n)=n^{2c}$ into Corollary \ref{cor:kcliqueKeyExchange}.
\end{proof}

Finally we note that if the zero $3$-clique hypothesis over range $R = n^{6+c}$ is true for any constant $c>0$ then a key exchange exists. 

\begin{corollary}
	For any constant $c>0$ there exists a $\delta>0$ such that given the strong zero $3$-clique hypothesis over range $R = n^{6+c}$ a key exchange exists where Alice and Bob successfully communicate a sub-polynomial number of bits with probability $1- 1/(n^{\lg(n)})$ in time $\tilde{O}\left(\alpha(n)\right)$. Let $I_T$ be the full transcript that Alice and Bob write and $r$ all the random bits used to generate it. For all $\PFT{\alpha(n)^{1+\delta}}$ algorithms $A$, $A(I_T)$ has an insignificant advantage to guess the $i^{th}$ bit of the key for all $i$.	
	\label{cor:3cliqueKeyExchangeSmallGap}
\end{corollary}
\begin{proof}
	In Corollary \ref{cor:3cliqueKeyExchange} if we choose range $R=n^{6+4c'}$, then set $\alpha(n)= n^{3+c'} + n^{2+2c'}$ note that $n^{3+2c'}= \alpha(n)^{1+\min(c'/(3+c'), 1/(2+2c'))}$. If $c>0$ then $c'>0$. If $c'>0$ then set $\delta = \min(c'/(3+c'), 1/(2+2c'))$ and we have the desired statement. 
\end{proof}