\section{Introduction}

\xxx{Story: building on Merkle etc we build cryptography out of combinatorial assumptions. We get a fine-grained key exchange from fine-grained assumptions, instead of from assumptions of an exponential gap! We demonstrate other changes needed to get one way functions with desired properties. We give the general form of what is needed to build the desired objects. Our assumptions seem like "One way function" type assumptions and combinatorial ones, and yet we can build a key exchange. }



In the 70s, Merkle proposed the first fine-grained key exchange in the form of Merkle Puzzles \cite{Merkle78}. Alice and Bob could do $O(n)$ work to exchange an index of size $\log(n)$, and if an eavesdropper Eve wanted to also learn the key, she would need to put in $O(n^2)$ work. The downside to this construction was that a random oracle was required to prove security. Later, a work by Biham, Goren, and Ishai showed that we could get this same quadratic gap in a similar construction, but this time only needed to assume a certain kind of exponentially strong one-way function \cite{BGI08}.

\xxx{Rio: Please check that this paragraph is correct!}
Our contribution to this line of work is the first fine-grained key exchange based on a fine-grained combinatorial assumption (see section \ref{sec:???} for details on the assumption). The key exchange will not require interaction, and so this implies chosen-plaintext attack secure \emph{fine-grained} public key cryptosystem (it's only secure in a fine-grained sense in general). Instead of needing to assume that a problem is exponentially hard to solve (like inverting an exponentially strong one-way function), or assume that random oracles exist, we only need to assume a particular kind of problem takes $O(n)$ time to create and $O(n^d)$ to solve, as long as $d \ge 3/2$. So, by assuming a problem is hard in a fine-grained sense, we get a key exchange that takes $O(N)$ time for Alice and Bob to execute, and requires an eavesdropper Eve $O(N^{1.5})$ time to break.

While this is a relatively small gap, even compared to previous work on this topic, the techniques required to prove security of this scheme are novel. First, we are taking combinatorial, one-way function types of assumptions and building public key cryptography out of them. We also begin to explore average-case to average-case reductions between fine-grained problems. In particular, we start with \zkclique~ and are able to show a reduction from an average-case \zkclique~to breaking our key exchange. Interestingly, this reduction fails in the worst case! This motivates further research into getting better average-case reductions for fine-grained problems, and even worst-case to average-case reductions for these problems in general.

\xxx{A paragraph about how Ball et al looked at fine grained cryptography, but couldn't build OWFs. We build OWFs!}

Last year, Ball, Rosen, Sabin, and Vasudevan published a work establishing the definition of fine-grained one-way functions, and importantly got the first worst-case to average-case reduction from one fine-grained problem to another. However, while they were able to make progress in worst-case to average-case reduction, they were unable to construct one-way functions based off of these problems, and even presented barriers for why one would be difficult or impossible to construct \cite{avgCaseFineGrained}.

Our other contribution is an important one in this direction: by assuming certain average-case fine-grained problems are hard we can get fine-grained one-way functions. In particular, for problems that require $O(n)$ time to create and $O(n^d)$ time to solve, we get fine-grained one-way functions that require $O(n)$ time to execute and $O(n^d)$ time to invert, exactly preserving the gap between how difficult it is to create a problem versus solving the problem!

\xxx{Rio: Can Virginia clean up this paragraph to make it more convincing?}
A reasonable question at this point would be: what assumptions are we using? In general, we are using assumptions that in the worst-case are known to be hard based off of various fine-grained complexity results, such as \zkclique~and $k$-sum. It has also been conjectured that for certain ranges of weights in the case of \zkclique~and entries of $k$-sum, these problems are average-case hard\cite{source?}. 

\subsection{Technical Overview}
In this section, we will review what techniques we use to get our construction of a fine-grained key exchanges and constructions for fine-grained one-way functions. For getting the key exchange to work, we need a problem that is \emph{plantable}, \emph{self-reducible}, and \emph{splittable}. Informally,
\begin{itemize}
	\item a problem is plantable if, when given a random instance without a solution, we can \emph{plant} one, and have that solution be difficult to find (or have it be difficult to distinguish from a no-solution instance);
	\item a problem is self-reducible if when given an instance with a solution, we can split it into many smaller, brute-forceable instances, such that only one of these small instances will have a solution;
	\item a problem is splittable if when given an instance with a solution, we can split it into two slightly smaller instances that \emph{both} have solutions.
\end{itemize}
While we need our problem to have all three of these qualities for the key exchange, we will only need it to be plantable for our one-way function constructions.

It turns out that a specific instance of the \zkclique~assumption satisfies all of these. For the remainder of this overview, we will be using the assumption that we can generate a planted \zkclique~instance in time $O(n^2)$ and it takes $O(n^k)$ for any randomized adversary to find the clique. In section \ref{sec:one-way-fns}, we show that we can relax this assumption for constructing fine-grained OWFs.

\subsubsection{Fine-Grained Key-Exchange}
To describe how we get our key-exchange, it is first helpful to get some context with Merkle Puzzles \cite{Merkle78}. The idea was simple: given a random hash function $H$ and public range $[n^2]$, Alice and Bob could exchange a key by each computing $10n$ hashes of random elements in $[n^2]$ and sending those hashes to each other. With all but negligible probability, Alice and Bob would agree on at least one preimage --- the index of that preimage would be their key. It would take an eavesdropper Eve $O(n^2)$ queries before she would be able to find the indices Alice and Bob agreed on. So, while Alice and Bob had to put in $O(n)$ work, Eve had to use $O(n^2)$ to break it. While interesting, the proof of security relied on the fact that $H$ was a random oracle.

Our construction will take on a similar form: Alice and Bob will send several problems to each other, and some of them will have planted solutions. By matching up where they both put solutions, they get a key exchange.

\xxx{Rio: need to finish this description with the correct parameters!}
Alice and Bob will exchange $m$ instances of the \zkclique~problem and in $\sqrt{m}$ of them, plant solutions. The other $m - \sqrt{m}$ will not have solutions (except with some small probability). These $m$ problems will be indexed, and we expect Alice and Bob to have both planted a solution in one of these indices. Alice can check her $\sqrt{m}$ indices while Bob checks his, and by then end, with constant probability, they will agree on a single index as a key. In the end, Alice and Bob require $O(mn^2 + \sqrt{m}n^{2k})$ time to solve. This value is minimized when $m = n^{k+1}$

An eavesdropper ....

\xxx{Rio: A quick note about how to get security reduction and why we needed all of those guarantees for our problem}

\subsubsection{Fine-Grained One-Way Functions and Consequences}
\xxx{Rio: I will write up this section.}
Something about how we define OWFs (esp vs Ball et al)

How we construct them
%TODO

\subsection{Related Work}
\xxx{Rio: This subsection needs work}

\begin{figure}
	\begin{tabular}{| l | l | l | l | l |}
		\hline
		Paper & Assumptions & Crypto & Runtime & \begin{tabular}{l} Power of\\
			Adversary
			\end{tabular} \\\hline
		\cite{Merkle78} & Random Oracles & Key Exchange & $O(n)$ & $O(n^2)$\\\hline
		\cite{BGI08} & Exponentially-Strong OWFs & Key Exchange & $O(n)$ & $O(n^2)$ \\\hline
		\cite{avgCaseFineGrained} & ???? & Proof of Work & $O(n)$ & N/A \\\hline
		[This work] & AC \zkclique~or $k$-sum & \begin{tabular}{l} OWFs,\\
			Key Exchange \& PKE
			\end{tabular} &\begin{tabular}{l}
			$O(n)$\\
			$O(N)$
		\end{tabular} & \begin{tabular}{l}
			$O(n^{1 + \delta})$\\
			$O(N^{1.5})$
		\end{tabular} \\\hline
		\cite{DVV16} & $\mathsf{NC}1 \neq \xor L/\poly$ & \begin{tabular}{l}
			OWFs, CRHFs, PRFs\\
			with sublin stretch,\\
			and PKE
			\end{tabular}  & $\mathsf{NC}1$ & $\mathsf{NC}1$\\
		& Unconditional & \begin{tabular}{l}
			PRGs with poly stretch\\
			Symmetric encryption,\\
			and CRHFs
			\end{tabular} & $\mathsf{AC}^{0}$ & $\mathsf{AC}^0$\\\hline
	\end{tabular}
	\caption{\label{fig:comparison} A table of previous works' results in this area. There have been several results characterizing different aspects of fine-grained cryptography.
	}
\end{figure}

\paragraph{Fine-Grained Key Exchanges.}Fine-grained cryptography is a relatively unexplored area, even though it had its start in the 70's with Merkle's puzzle idea: the gap between honestly participating in the protocol versus breaking the security guarantee was only polynomial \cite{Merkle78}. 30 years later, Biham, Goren, and Ishai showed how to get the same result but making a plausible assumption \cite{BGI08}; that is, they assumed a certain kind of strong one-way function existed, rather than random oracles, which do not exist.

\paragraph{Another notion of Fine-grained Cryptography.} In 2016, a work by Degwekar, Vaikuntanathan, and Vasudevan discussed fine-grained complexity with respect to time and/or space bounded adversaries, and showed constructions for some cryptographic primitives (including PKE) when restricting an adversary to a certain circuit class
%TODO: write more here

\paragraph{Fine-Grained OWFs.}
